const logger = (req, res, next) => {
  const start = Date.now();
  
  // Log de la requ√™te entrante
  console.log(`üì• ${req.method} ${req.originalUrl} - ${new Date().toISOString()}`);
  
  // Intercepter la r√©ponse pour logger les d√©tails
  const originalSend = res.send;
  res.send = function(data) {
    const duration = Date.now() - start;
    
    // Log de la r√©ponse
    const statusColor = res.statusCode >= 400 ? 'üî¥' : res.statusCode >= 300 ? 'üü°' : 'üü¢';
    console.log(`${statusColor} ${req.method} ${req.originalUrl} - ${res.statusCode} (${duration}ms)`);
    
    // Log des erreurs
    if (res.statusCode >= 400) {
      console.error(`‚ùå Erreur API: ${req.method} ${req.originalUrl}`, {
        statusCode: res.statusCode,
        duration,
        userAgent: req.get('User-Agent'),
        ip: req.ip,
        userId: req.user?.id || 'non connect√©'
      });
    }
    
    originalSend.call(this, data);
  };
  
  next();
};

module.exports = logger; 